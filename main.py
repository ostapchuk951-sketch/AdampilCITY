import os
from flask import Flask, request
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
ApplicationBuilder,
CommandHandler,
MessageHandler,
filters,
ContextTypes,
)


TOKEN = os.getenv("BOT_TOKEN") # –¢–æ–∫–µ–Ω –∑ BotFather
app = Flask(__name__)


# --- –õ–æ–≥—ñ–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤–æ–¥–∏ ---
def calculate_water(weight_kg: float) -> float:
"""–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø–æ—Ç—Ä–µ–±–∏ —É –≤–æ–¥—ñ: 30 –º–ª –Ω–∞ 1 –∫–≥ –≤–∞–≥–∏"""
return round(weight_kg * 30 / 1000, 2) # —É –ª—ñ—Ç—Ä–∞—Ö


# --- –û–±—Ä–æ–±–Ω–∏–∫–∏ ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
await update.message.reply_text(
"–ü—Ä–∏–≤—ñ—Ç! üíß\n–í–∫–∞–∂–∏ —Å–≤—ñ–π —Ä—ñ—Å—Ç —ñ –≤–∞–≥—É —É —Ñ–æ—Ä–º–∞—Ç—ñ: 175 70 (—Ä—ñ—Å—Ç —Å–º, –≤–∞–≥–∞ –∫–≥)"
)


async def handle_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
text = update.message.text.strip()
parts = text.split()


if len(parts) != 2 or not all(p.replace('.', '', 1).isdigit() for p in parts):
await update.message.reply_text("‚ö†Ô∏è –í–∫–∞–∂–∏ –¥–∞–Ω—ñ —É —Ñ–æ—Ä–º–∞—Ç—ñ: 175 70")
return


height, weight = map(float, parts)
water = calculate_water(weight)


context.user_data['water'] = water
context.user_data['reminder'] = False


reply_markup = ReplyKeyboardMarkup([
["–¢–∞–∫"], ["–ù—ñ"]
], resize_keyboard=True)


await update.message.reply_text(
f"–¢–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–∏—Ç–∏ –±–ª–∏–∑—å–∫–æ {water} –ª –≤–æ–¥–∏ –Ω–∞ –¥–µ–Ω—å. üí¶\n–ù–∞–≥–∞–¥—É–≤–∞—Ç–∏ –ø—Ä–æ –≤–æ–¥—É?",
reply_markup=reply_markup
)


async def handle_reminder_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
choice = update.message.text.lower()
if choice == "—Ç–∞–∫":
context.user_data['reminder'] = True
await update.message.reply_text("–î–æ–±—Ä–µ! –Ø –±—É–¥—É –Ω–∞–≥–∞–¥—É–≤–∞—Ç–∏ –∫–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É üíß")
elif choice == "–Ω—ñ":
context.user_data['reminder'] = False
await update.message.reply_text("–ì–∞—Ä–∞–∑–¥! –ë–µ–∑ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å ‚òÄÔ∏è")
else:
await update.message.reply_text("–í–∏–±–µ—Ä–∏ '–¢–∞–∫' –∞–±–æ '–ù—ñ'")


# --- Flask webhook ---
@app.route(f"/{TOKEN}", methods=['POST'])
def webhook():
update = Update.de_json(request.get_json(force=True), bot.application.bot)
bot.application.update_queue.put(update)
return "OK", 200


@app.route('/')
def index():
return "Bot is running!"


# --- –ì–æ–ª–æ–≤–Ω–∏–π –∑–∞–ø—É—Å–∫ ---
if __name__ == '__main__':
from telegram.ext import Application


bot = Application.builder().token(TOKEN).build()


bot.add_handler(CommandHandler('start', start))
bot.add_handler(MessageHandler(filters.Regex(r'^\d+\s+\d+$'), handle_data))
bot.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_reminder_choice))


port = int(os.environ.get('PORT', 5000))
app.run(host='0.0.0.0', port=port)
